[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/souhir/CODES/IotHub_send_receive_copy/build/bootloader/esp-idf/esptool_py && /Users/souhir/.espressif/python_env/idf5.1_py3.12_env/bin/python /Users/souhir/esp-idf-v5.1.3/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/souhir/CODES/IotHub_send_receive_copy/build/bootloader/bootloader.bin
Bootloader binary size 0x6850 bytes. 0x7b0 bytes (7%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/azure_main.c.obj
/Users/souhir/CODES/IotHub_send_receive_copy/main/azure_main.c: In function 'initialise_wifi':
/Users/souhir/CODES/IotHub_send_receive_copy/main/azure_main.c:89:34: warning: extra tokens at end of #ifdef directive
   89 | #ifdef CONFIG_IDF_TARGET_ESP8266 || (ESP_IDF_VERSION < ESP_IDF_VERSION_VAL(4, 0, 0))
      |                                  ^~
/Users/souhir/CODES/IotHub_send_receive_copy/main/azure_main.c: In function 'iothub_send':
/Users/souhir/CODES/IotHub_send_receive_copy/main/azure_main.c:254:21: warning: passing argument 1 of 'sprintf' from incompatible pointer type [-Wincompatible-pointer-types]
  254 |             sprintf(msgText, "{\"deviceId\":\"RFID\",\"RFID_tag\":%" PRIu64 "}", serial_number);
      |                     ^~~~~~~
      |                     |
      |                     const char **
In file included from /Users/souhir/CODES/IotHub_send_receive_copy/main/azure_main.c:1:
/Users/souhir/.espressif/tools/xtensa-esp32-elf/esp-12.2.0_20230208/xtensa-esp32-elf/xtensa-esp32-elf/sys-include/stdio.h:244:18: note: expected 'char * restrict' but argument is of type 'const char **'
  244 | int     sprintf (char *__restrict, const char *__restrict, ...)
      |                  ^
/Users/souhir/CODES/IotHub_send_receive_copy/main/azure_main.c:276:65: warning: passing argument 1 of 'IoTHubMessage_CreateFromString' from incompatible pointer type [-Wincompatible-pointer-types]
  276 |                 message_handle = IoTHubMessage_CreateFromString(msgText);
      |                                                                 ^~~~~~~
      |                                                                 |
      |                                                                 const char **
In file included from /Users/souhir/CODES/IotHub_send_receive_copy/azure-iot-sdk-c/iothub_client/inc/iothub_message.h:14,
                 from /Users/souhir/CODES/IotHub_send_receive_copy/azure-iot-sdk-c/iothub_client/inc/iothub_client_core_common.h:16,
                 from /Users/souhir/CODES/IotHub_send_receive_copy/azure-iot-sdk-c/iothub_client/inc/iothub_client_ll.h:40,
                 from /Users/souhir/CODES/IotHub_send_receive_copy/main/azure_main.c:14:
/Users/souhir/CODES/IotHub_send_receive_copy/azure-iot-sdk-c/iothub_client/inc/iothub_message.h:79:89: note: expected 'const char *' but argument is of type 'const char **'
   79 | MOCKABLE_FUNCTION(, IOTHUB_MESSAGE_HANDLE, IoTHubMessage_CreateFromString, const char*, source);
      |                                                                            ~~~~~~~~~~~~~^~~~~~
/Users/souhir/CODES/IotHub_send_receive_copy/azure-iot-sdk-c/c-utility/deps/umock-c/inc/umock_c/umock_c_prod.h:86:75: note: in definition of macro 'UMOCK_C_PROD_ARG_IN_SIGNATURE'
   86 | #define UMOCK_C_PROD_ARG_IN_SIGNATURE(count, arg_type, arg_name) arg_type arg_name MU_IFCOMMA(count)
      |                                                                           ^~~~~~~~
/Users/souhir/CODES/IotHub_send_receive_copy/azure-iot-sdk-c/c-utility/deps/azure-macro-utils-c/inc/azure_macro_utils/macro_utils.h:35:21: note: in expansion of macro 'MU_FOR_EACH_2_COUNTED_2'
   35 | #define MU_C2_(x,y) x##y
      |                     ^
/Users/souhir/CODES/IotHub_send_receive_copy/azure-iot-sdk-c/c-utility/deps/umock-c/inc/umock_c/umock_c_prod.h:89:70: note: in expansion of macro 'MU_FOR_EACH_2_COUNTED'
   89 |     result modifiers function(MU_IF(MU_COUNT_ARG(__VA_ARGS__),,void) MU_FOR_EACH_2_COUNTED(UMOCK_C_PROD_ARG_IN_SIGNATURE, __VA_ARGS__))
      |                                                                      ^~~~~~~~~~~~~~~~~~~~~
/Users/souhir/CODES/IotHub_send_receive_copy/azure-iot-sdk-c/c-utility/deps/umock-c/inc/umock_c/umock_c_prod.h:95:5: note: in expansion of macro 'MOCKABLE_FUNCTION_SIGNATURE'
   95 |     MOCKABLE_FUNCTION_SIGNATURE(modifiers, result, function, __VA_ARGS__);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/souhir/CODES/IotHub_send_receive_copy/azure-iot-sdk-c/iothub_client/inc/iothub_message.h:79:1: note: in expansion of macro 'MOCKABLE_FUNCTION'
   79 | MOCKABLE_FUNCTION(, IOTHUB_MESSAGE_HANDLE, IoTHubMessage_CreateFromString, const char*, source);
      | ^~~~~~~~~~~~~~~~~
/Users/souhir/CODES/IotHub_send_receive_copy/main/azure_main.c: In function 'iothub_receive':
/Users/souhir/CODES/IotHub_send_receive_copy/main/azure_main.c:344:38: warning: unused variable 'protocol' [-Wunused-variable]
  344 |     IOTHUB_CLIENT_TRANSPORT_PROVIDER protocol;
      |                                      ^~~~~~~~
/Users/souhir/CODES/IotHub_send_receive_copy/main/azure_main.c: In function 'rc522_handler':
/Users/souhir/CODES/IotHub_send_receive_copy/main/azure_main.c:326:9: warning: statement will never be executed [-Wswitch-unreachable]
  326 |         printf("11\n");
      |         ^~~~~~~~~~~~~~
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable mqtt_beebotte.elf
[8/10] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 27 ELF sections
Successfully created esp32 image.
Generated /Users/souhir/CODES/IotHub_send_receive_copy/build/mqtt_beebotte.bin
[9/10] cd /Users/souhir/CODES/IotHub_send_receive_copy/build/esp-idf/esptool_py && /Users/souhir/.espressif/python_env/idf5.1_py3.12_env/bin/python /Users/souhir/esp-idf-v5.1.3/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/souhir/CODES/IotHub_send_receive_copy/build/partition_table/partition-table.bin /Users/souhir/CODES/IotHub_send_receive_copy/build/mqtt_beebotte.bin
mqtt_beebotte.bin binary size 0xff7b0 bytes. Smallest app partition is 0x200000 bytes. 0x100850 bytes (50%) free.
[9/10] cd /Users/souhir/esp-idf-v5.1.3/components/esptool_py && /opt/homebrew/Cellar/cmake/3.29.2/bin/cmake -D IDF_PATH=/Users/souhir/esp-idf-v5.1.3 -D "SERIAL_TOOL=/Users/souhir/.espressif/python_env/idf5.1_py3.12_env/bin/python;;/Users/souhir/esp-idf-v5.1.3/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/souhir/CODES/IotHub_send_receive_copy/build -P /Users/souhir/esp-idf-v5.1.3/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/cu.usbserial-0001 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 mqtt_beebotte.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port /dev/cu.usbserial-0001
Connecting......
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
WARNING: Detected crystal freq 41.01MHz is quite different to normalized freq 40MHz. Unsupported crystal in use?
Crystal is 40MHz
MAC: 7c:87:ce:2d:7c:60
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0010ffff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26704 bytes to 16721...
Writing at 0x00001000... (50 %)
Writing at 0x000076a0... (100 %)
Wrote 26704 bytes (16721 compressed) at 0x00001000 in 0.9 seconds (effective 231.5 kbit/s)...
Hash of data verified.
Compressed 1046448 bytes to 661727...
Writing at 0x00010000... (2 %)
Writing at 0x0001cf6a... (4 %)
Writing at 0x00029be8... (7 %)
Writing at 0x00030ad5... (9 %)
Writing at 0x00036201... (12 %)
Writing at 0x00041280... (14 %)
Writing at 0x00048cf1... (17 %)
Writing at 0x0004e63f... (19 %)
Writing at 0x00054660... (21 %)
Writing at 0x00059ec8... (24 %)
Writing at 0x0006004e... (26 %)
Writing at 0x00065f26... (29 %)
Writing at 0x0006be19... (31 %)
Writing at 0x00071975... (34 %)
Writing at 0x00077220... (36 %)
Writing at 0x0007c8cc... (39 %)
Writing at 0x000821aa... (41 %)
Writing at 0x00087af6... (43 %)
Writing at 0x0008d4fb... (46 %)
Writing at 0x00092d2c... (48 %)
Writing at 0x000987c0... (51 %)
Writing at 0x0009eb96... (53 %)
Writing at 0x000a46b0... (56 %)
Writing at 0x000aa036... (58 %)
Writing at 0x000af382... (60 %)
Writing at 0x000b46ea... (63 %)
Writing at 0x000b9c3f... (65 %)
Writing at 0x000bef1b... (68 %)
Writing at 0x000c458c... (70 %)
Writing at 0x000c9f40... (73 %)
Writing at 0x000cfacc... (75 %)
Writing at 0x000d5067... (78 %)
Writing at 0x000da9d1... (80 %)
Writing at 0x000e0434... (82 %)
Writing at 0x000e5cea... (85 %)
Writing at 0x000ebe13... (87 %)
Writing at 0x000f45f9... (90 %)
Writing at 0x000fc6d5... (92 %)
Writing at 0x0010223a... (95 %)
Writing at 0x0010811a... (97 %)
Writing at 0x0010d396... (100 %)
Wrote 1046448 bytes (661727 compressed) at 0x00010000 in 17.8 seconds (effective 471.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 104...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (104 compressed) at 0x00008000 in 0.1 seconds (effective 199.9 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
